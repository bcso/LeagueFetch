{"name":"LeagueFetch","tagline":"","body":"LeagueFetch\r\n===========\r\n\r\n### Welcome to League Fetch.\r\nIt is the beginnings of a thin wrapper between the [League of Legends API](https://developer.riotgames.com/) and the API calls that the user may use with their user key.\r\n\r\nIncluded is a python script leveraging the use of this wrapper, going through some test cases. Users may choose between one of two options - first is to retrieve histories for their past 10 games and associated Match History ID, second is to scrape summoner in-game-names. Match History ID can be easily used to query match history details by concatenating it in the request URL.\r\n\r\n\r\n```\r\n$ git clone https://github.com/bcso/LeagueFetch.git\r\n$ cd LeagueFetch\r\n$ python main.py\r\n```\r\n\r\n### Finding match history\r\nFind a list of your last 10 most recent match histories and the corresponding duration. This is used mainly for development purposes - ID's are unique and can be used to find more detailed match details.\r\n\r\n```\r\n$ python main.py \r\n1. Find your match history\r\n2. Scrape some names\r\n3. Quit\r\nChoice: 1 \r\n\r\n Input your summoner name: ddomokunn\r\nMatch ID: 1564048672 Duration: 1704\r\nMatch ID: 1564868327 Duration: 2016\r\nMatch ID: 1564942790 Duration: 1735\r\nMatch ID: 1564958838 Duration: 2508\r\nMatch ID: 1569546251 Duration: 1270\r\nMatch ID: 1569604125 Duration: 1564\r\nMatch ID: 1623238744 Duration: 2194\r\nMatch ID: 1642182564 Duration: 3029\r\nMatch ID: 1657117433 Duration: 1984\r\nMatch ID: 1657171207 Duration: 2224\r\n```\r\n\r\n### Scraping names\r\nScrape some names that start from the specified user ID. The scraper will increment by 1 from this start point.\r\n```\r\n$ python main.py \r\n1. Find your match history\r\n2. Scrape some names\r\n3. Quit\r\nChoice: 2\r\n\r\n Number of names: 3\r\nDDomokunn\r\nBiggestAnBaddest\r\nRenderDead\r\n```\r\n\r\n### Future work\r\nAs shown above the basic data retrieval is very intuitive - this opens the possibility for:\r\n- Mapping friend networks, visualization with D3\r\n- Generating insights based on friend groups and main roles\r\n- Storing names scraped in local database for faster querying\r\n\r\n### Authors and Contributors\r\nIn 2015 Brian So (@bcso) decided to create his first GH page for this project. This is a proof of concept project playing around with Riot's League of legends API to test endpoints. Credits go out to [Riot Games](http://www.riotgames.com/) for developing this amazing API!","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}